{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SED/Desktop/eden-video/app/image/page.js"],"sourcesContent":["'use client'\r\nimport React from 'react'\r\nimport Image from 'next/image'\r\nimport { useState } from 'react'\r\nimport { fal } from \"@fal-ai/client\";\r\n\r\nconst Page = () => {\r\n\r\n  const [prompt, setPrompt] = useState('')\r\n  const [image, setImage] = useState(null)\r\n  const [isGenerating, setIsGenerating] = useState(false)\r\n  const [error, setError] = useState(null)\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setIsGenerating(true)\r\n    setError(null)\r\n    \r\n    try {\r\n\r\n      const result = await fal.subscribe(\"fal-ai/stable-diffusion-xl\", {\r\n        input: {\r\n          prompt: prompt,\r\n          image_size: \"1024x1024\"\r\n        },\r\n        logs: true,\r\n        onQueueUpdate: (update) => {\r\n          if (update.status === \"IN_PROGRESS\") {\r\n            update.logs.map((log) => log.message).forEach(console.log);\r\n          }\r\n        },\r\n      });\r\n      setImage(result.data.images[0].url)\r\n    } catch (error) {\r\n      setError(error.message)\r\n    } finally {\r\n      setIsGenerating(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main className=\"min-h-screen bg-gradient-to-br from-[#0F172A] to-[#1E293B] text-white p-8\">\r\n      {/* Header with Logo */}\r\n      <header className=\"flex items-center space-x-4 mb-12\">\r\n        <Image\r\n          src=\"/favicon.png\"\r\n          alt=\"Eden AI Logo\"\r\n          width={40}\r\n          height={40}\r\n          className=\"rounded-lg\"\r\n        />\r\n        <h1 className=\"text-2xl font-bold bg-gradient-to-r from-[#187ADB] to-[#4CAF50] bg-clip-text text-transparent\">\r\n          Eden AI Image Generator\r\n        </h1>\r\n      </header>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"max-w-4xl mx-auto space-y-8\">\r\n        {/* Prompt Input Section */}\r\n        <div className=\"bg-[#1E293B]/50 p-6 rounded-xl backdrop-blur-sm border border-[#187ADB]/20\">\r\n          <div className=\"flex flex-col space-y-4\">\r\n            <label htmlFor=\"prompt\" className=\"text-lg font-medium text-[#187ADB]\">\r\n              Enter your prompt\r\n            </label>\r\n            <textarea\r\n              id=\"prompt\"\r\n              className=\"w-full h-32 px-4 py-3 bg-[#0F172A]/50 rounded-lg border border-[#187ADB]/30 focus:border-[#187ADB] focus:ring-2 focus:ring-[#187ADB] focus:outline-none text-white placeholder-gray-400 resize-none\"\r\n              placeholder=\"Describe the image you want to generate...\"\r\n              value={prompt}\r\n              onChange={(e) => setPrompt(e.target.value)}\r\n            />\r\n            <button \r\n              onClick={handleSubmit} \r\n              disabled={isGenerating}\r\n              className=\"self-end px-6 py-2 bg-gradient-to-r from-[#187ADB] to-[#4CAF50] rounded-lg font-medium hover:from-[#1565C0] hover:to-[#388E3C] transition-all duration-200 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-[#187ADB] focus:ring-offset-2 focus:ring-offset-[#0F172A] disabled:opacity-70 disabled:cursor-not-allowed flex items-center space-x-2\"\r\n            >\r\n              {isGenerating ? (\r\n                <>\r\n                  <svg className=\"animate-spin h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                  </svg>\r\n                  <span>Generating...</span>\r\n                </>\r\n              ) : (\r\n                'Generate Image'\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Results Container */}\r\n        <div className=\"bg-[#1E293B]/50 p-6 rounded-xl backdrop-blur-sm border border-[#187ADB]/20 min-h-[400px] flex items-center justify-center\">\r\n          {isGenerating ? (\r\n            <div className=\"text-center\">\r\n              <div className=\"flex justify-center mb-4\">\r\n                <svg className=\"animate-spin h-8 w-8 text-[#187ADB]\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                </svg>\r\n              </div>\r\n              <p className=\"text-lg text-[#187ADB] font-medium\">Generating your image...</p>\r\n              <p className=\"text-sm text-gray-400 mt-2\">This may take a few moments</p>\r\n            </div>\r\n          ) : image ? (\r\n            <img src={image} alt=\"Generated image\" className=\"w-full h-auto rounded-lg\" />\r\n          ) : (\r\n            <div className=\"text-center text-gray-400\">\r\n              <p className=\"text-lg\">Your generated image will appear here</p>\r\n              <p className=\"text-sm mt-2\">Enter a prompt and click generate to create your image</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Page"],"names":[],"mappings":";;;;AACA;AACA;AAEA;AAJA;;;;;;AAMA,MAAM,OAAO;IAEX,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,gBAAgB;QAChB,SAAS;QAET,IAAI;YAEF,MAAM,SAAS,MAAM,qJAAA,CAAA,MAAG,CAAC,SAAS,CAAC,8BAA8B;gBAC/D,OAAO;oBACL,QAAQ;oBACR,YAAY;gBACd;gBACA,MAAM;gBACN,eAAe,CAAC;oBACd,IAAI,OAAO,MAAM,KAAK,eAAe;wBACnC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,MAAQ,IAAI,OAAO,EAAE,OAAO,CAAC,QAAQ,GAAG;oBAC3D;gBACF;YACF;YACA,SAAS,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG;QACpC,EAAE,OAAO,OAAO;YACd,SAAS,MAAM,OAAO;QACxB,SAAU;YACR,gBAAgB;QAClB;IACF;IAEA,qBACE,8OAAC;QAAK,WAAU;;0BAEd,8OAAC;gBAAO,WAAU;;kCAChB,8OAAC,6HAAA,CAAA,UAAK;wBACJ,KAAI;wBACJ,KAAI;wBACJ,OAAO;wBACP,QAAQ;wBACR,WAAU;;;;;;kCAEZ,8OAAC;wBAAG,WAAU;kCAAgG;;;;;;;;;;;;0BAMhH,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAM,SAAQ;oCAAS,WAAU;8CAAqC;;;;;;8CAGvE,8OAAC;oCACC,IAAG;oCACH,WAAU;oCACV,aAAY;oCACZ,OAAO;oCACP,UAAU,CAAC,IAAM,UAAU,EAAE,MAAM,CAAC,KAAK;;;;;;8CAE3C,8OAAC;oCACC,SAAS;oCACT,UAAU;oCACV,WAAU;8CAET,6BACC;;0DACE,8OAAC;gDAAI,WAAU;gDAAkC,OAAM;gDAA6B,MAAK;gDAAO,SAAQ;;kEACtG,8OAAC;wDAAO,WAAU;wDAAa,IAAG;wDAAK,IAAG;wDAAK,GAAE;wDAAK,QAAO;wDAAe,aAAY;;;;;;kEACxF,8OAAC;wDAAK,WAAU;wDAAa,MAAK;wDAAe,GAAE;;;;;;;;;;;;0DAErD,8OAAC;0DAAK;;;;;;;uDAGR;;;;;;;;;;;;;;;;;kCAOR,8OAAC;wBAAI,WAAU;kCACZ,6BACC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;wCAAsC,OAAM;wCAA6B,MAAK;wCAAO,SAAQ;;0DAC1G,8OAAC;gDAAO,WAAU;gDAAa,IAAG;gDAAK,IAAG;gDAAK,GAAE;gDAAK,QAAO;gDAAe,aAAY;;;;;;0DACxF,8OAAC;gDAAK,WAAU;gDAAa,MAAK;gDAAe,GAAE;;;;;;;;;;;;;;;;;8CAGvD,8OAAC;oCAAE,WAAU;8CAAqC;;;;;;8CAClD,8OAAC;oCAAE,WAAU;8CAA6B;;;;;;;;;;;mCAE1C,sBACF,8OAAC;4BAAI,KAAK;4BAAO,KAAI;4BAAkB,WAAU;;;;;iDAEjD,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAE,WAAU;8CAAU;;;;;;8CACvB,8OAAC;oCAAE,WAAU;8CAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO1C;uCAEe"}},
    {"offset": {"line": 290, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}