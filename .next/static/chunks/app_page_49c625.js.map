{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SED/Desktop/eden-video/app/page.js"],"sourcesContent":["'use client'\nimport React from 'react'\nimport Image from 'next/image'\nimport { useState } from 'react'\nimport { fal } from \"@fal-ai/client\";\n\nconst Page = () => {\n\n  const [prompt, setPrompt] = useState('')\n  const [video, setVideo] = useState(null)\n  const [isGenerating, setIsGenerating] = useState(false)\n  const [error, setError] = useState(null)\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    setIsGenerating(true)\n    setError(null)\n    \n    try {\n\n      fal.config({\n        credentials: process.env.NEXT_PUBLIC_FAL_KEY\n      });\n\n      const result = await fal.subscribe(\"fal-ai/kling-video/v1.6/standard/text-to-video\", {\n        input: {\n          prompt: prompt\n        },\n        logs: true,\n        onQueueUpdate: (update) => {\n          if (update.status === \"IN_PROGRESS\") {\n            update.logs.map((log) => log.message).forEach(console.log);\n          }\n        },\n      });\n      setVideo(result.data.video.url)\n    } catch (error) {\n      setError(error.message)\n    } finally {\n      setIsGenerating(false)\n    }\n  }\n\n  return (\n    <main className=\"min-h-screen bg-gradient-to-br from-[#0F172A] to-[#1E293B] text-white p-4 sm:p-8\">\n      {/* Header with Logo */}\n      <header className=\"flex items-center space-x-3 sm:space-x-4 mb-8 sm:mb-12\">\n        <Image\n          src=\"/favicon.png\"\n          alt=\"Eden AI Logo\"\n          width={32}\n          height={32}\n          className=\"rounded-lg sm:w-10 sm:h-10\"\n        />\n        <h1 className=\"text-xl sm:text-2xl font-bold bg-gradient-to-r from-[#187ADB] to-[#4CAF50] bg-clip-text text-transparent\">\n          Eden AI Video Generator\n        </h1>\n      </header>\n\n      {/* Main Content */}\n      <div className=\"max-w-4xl mx-auto space-y-6 sm:space-y-8\">\n        {/* Prompt Input Section */}\n        <div className=\"bg-[#1E293B]/50 p-4 sm:p-6 rounded-xl backdrop-blur-sm border border-[#187ADB]/20\">\n          <div className=\"flex flex-col space-y-3 sm:space-y-4\">\n            <label htmlFor=\"prompt\" className=\"text-base sm:text-lg font-medium text-[#187ADB]\">\n              Enter your prompt\n            </label>\n            <textarea\n              id=\"prompt\"\n              className=\"w-full h-24 sm:h-32 px-3 sm:px-4 py-2 sm:py-3 bg-[#0F172A]/50 rounded-lg border border-[#187ADB]/30 focus:border-[#187ADB] focus:ring-2 focus:ring-[#187ADB] focus:outline-none text-white placeholder-gray-400 resize-none text-sm sm:text-base\"\n              placeholder=\"Describe the video you want to generate...\"\n              value={prompt}\n              onChange={(e) => setPrompt(e.target.value)}\n            />\n            <button \n              onClick={handleSubmit} \n              disabled={isGenerating}\n              className=\"self-end px-4 sm:px-6 py-2 bg-gradient-to-r from-[#187ADB] to-[#4CAF50] rounded-lg font-medium hover:from-[#1565C0] hover:to-[#388E3C] transition-all duration-200 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-[#187ADB] focus:ring-offset-2 focus:ring-offset-[#0F172A] disabled:opacity-70 disabled:cursor-not-allowed flex items-center space-x-2 text-sm sm:text-base\"\n            >\n              {isGenerating ? (\n                <>\n                  <svg className=\"animate-spin h-4 w-4 sm:h-5 sm:w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                  <span>Generating...</span>\n                </>\n              ) : (\n                'Generate Video'\n              )}\n            </button>\n          </div>\n        </div>\n\n        {/* Results Container */}\n        <div className=\"bg-[#1E293B]/50 p-4 sm:p-6 rounded-xl backdrop-blur-sm border border-[#187ADB]/20 min-h-[300px] sm:min-h-[400px] flex items-center justify-center\">\n          {isGenerating ? (\n            <div className=\"text-center\">\n              <div className=\"flex justify-center mb-3 sm:mb-4\">\n                <svg className=\"animate-spin h-6 w-6 sm:h-8 sm:w-8 text-[#187ADB]\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n              </div>\n              <p className=\"text-base sm:text-lg text-[#187ADB] font-medium\">Generating your video...</p>\n              <p className=\"text-xs sm:text-sm text-gray-400 mt-1 sm:mt-2\">This may take a few moments</p>\n            </div>\n          ) : video ? (\n            <video src={video} controls className=\"w-full h-auto rounded-lg max-h-[500px] object-contain\" />\n          ) : (\n            <div className=\"text-center text-gray-400 px-4\">\n              <p className=\"text-base sm:text-lg\">Your generated video will appear here</p>\n              <p className=\"text-xs sm:text-sm mt-1 sm:mt-2\">Enter a prompt and click generate to create your video</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </main>\n  )\n}\n\nexport default Page"],"names":[],"mappings":"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"}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}